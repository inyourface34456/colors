resource color {
    static new: func(red: float64, green: float64, blue: float64) -> expected<color, exeptions>
    static fromrgb: func(red: float64, green: float64, blue: float64) -> expected<color, exeptions>
    static fromhex: func(value: string) -> expected<color, exeptions>
    static fromhsl: func(hue: float64, sateration: float64, lightness: float64) -> expected<color, exeptions>
    static fromhsv: func(hue: float64, sateration: float64, value: float64) -> expected<color, exeptions>
    static fromcmyk: func(cyan: float64, magenta: float64, yellow: float64, black: float64) -> expected<color, exeptions>
    tohex: func() -> string
    tohsl: func() -> tuple<float64, float64, float64>
    tohsv: func() -> tuple<float64, float64, float64>
    tocmyk: func() -> tuple<float64, float64, float64, float64>
    greyscale: func() -> tuple<float64, float64, float64>
}

variant exeptions {
    incorrectlength(u32),
    hueoutofrange(float64),
    saterationoutofrange(float64),
    lightnessoutofrange(float64),
    valueoutofrange(float64),
    cyanoutofrange(float64),
    magentaoutofrange(float64),
    yellowoutofrange(float64),
    blackoutofrange(float64),
    redoutofrange(float64),
    greenoutofrange(float64),
    blueoutofrange(float64),
}